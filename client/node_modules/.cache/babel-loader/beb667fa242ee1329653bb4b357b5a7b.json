{"ast":null,"code":"var _jsxFileName = \"/Users/ricky/Documents/CodingBootcamp/Projects/Project-3/client/src/views/CreateOrder.js\";\nimport React, { Component } from 'react';\nimport API from '../utils/API';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass CreateOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTransactionTypes = () => {\n      API.getAllTransactionTypes().then(dbResponse => {\n        this.setState({\n          transTypes: dbResponse.data\n        }); // for (let id in dbResponse.data) {\n        //     console.log(dbResponse.data[id].transaction_type);\n        // }\n      });\n    };\n\n    this.getProducts = () => {\n      API.getAllProducts().then(dbResponse => {\n        this.setState({\n          products: dbResponse.data\n        }, () => console.log(this.state.products));\n      });\n    };\n\n    this.handleInputChange = e => {\n      e.persist();\n      this.setState({\n        [e.target.name]: e.target.value\n      }, output => {\n        console.log(this.state.price, this.state.quantity);\n      });\n    };\n\n    this.submitOrder = e => {\n      e.preventDefault();\n      let transaction = document.getElementById('transactionSelection');\n      let product = document.getElementById('productSelection');\n      this.setState({\n        selectedTransaction: transaction,\n        selectedProduct: product\n      });\n      console.log(this.state.selectedTransaction, this.state.selectedProduct, this.state.price, this.state.quantity);\n    };\n\n    this.state = {\n      transTypes: [],\n      products: [],\n      selectedTransaction,\n      selectedProduct,\n      price: 0,\n      quantity: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getTransactionTypes();\n    this.getProducts();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Container, {\n      expand: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Transaction Type\"), React.createElement(Form.Control, {\n      as: \"select\",\n      id: \"transactionSelection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.transTypes.map((transType, index) => React.createElement(\"option\", {\n      key: index,\n      value: transType.transaction_name,\n      id: transType.transaction_type_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, transType.transaction_type)))), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Product SKU\"), React.createElement(Form.Control, {\n      as: \"select\",\n      id: \"productSelection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.products.map((product, index) => React.createElement(\"option\", {\n      key: index,\n      value: product.product_name,\n      id: product.product_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, product.product_sku)))), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Price\"), React.createElement(Form.Control, {\n      type: \"text\",\n      rows: \"1\",\n      name: \"price\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(Form.Control, {\n      type: \"text\",\n      rows: \"1\",\n      name: \"quantity\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.submitOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Order Now\")));\n  }\n\n}\n\nexport default CreateOrder;","map":{"version":3,"sources":["/Users/ricky/Documents/CodingBootcamp/Projects/Project-3/client/src/views/CreateOrder.js"],"names":["React","Component","API","Container","Form","Button","CreateOrder","constructor","props","getTransactionTypes","getAllTransactionTypes","then","dbResponse","setState","transTypes","data","getProducts","getAllProducts","products","console","log","state","handleInputChange","e","persist","target","name","value","output","price","quantity","submitOrder","preventDefault","transaction","document","getElementById","product","selectedTransaction","selectedProduct","componentDidMount","render","map","transType","index","transaction_name","transaction_type_id","transaction_type","product_name","product_id","product_sku"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport API from '../utils/API';\n\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass CreateOrder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            transTypes: [],\n            products: [],\n            selectedTransaction,\n            selectedProduct,\n            price: 0,\n            quantity: 0        }\n    }\n\n    getTransactionTypes = () => {\n        API.getAllTransactionTypes()\n            .then((dbResponse) => {\n                this.setState({transTypes: dbResponse.data})\n                // for (let id in dbResponse.data) {\n                //     console.log(dbResponse.data[id].transaction_type);\n                // }\n            })\n    }\n\n    getProducts = () => {\n        API.getAllProducts()\n            .then((dbResponse) => {\n                this.setState({products: dbResponse.data}, () => console.log(this.state.products));\n            });\n    }\n\n    componentDidMount() {\n        this.getTransactionTypes();\n        this.getProducts();\n    }\n\n    handleInputChange = (e) => {\n        e.persist();\n\n        this.setState({[e.target.name]: e.target.value}, (output) => {\n            console.log(this.state.price, this.state.quantity);\n        });\n    }\n\n    submitOrder = (e) => {\n        e.preventDefault();\n\n        let transaction = document.getElementById('transactionSelection');\n        let product = document.getElementById('productSelection');\n\n        this.setState({\n            selectedTransaction: transaction, \n            selectedProduct: product\n        });\n\n        console.log(this.state.selectedTransaction, this.state.selectedProduct, this.state.price, this.state.quantity);\n    }\n\n    render() {\n        return (\n            <div>\n                <Container expand=\"md\">\n                    <Form>\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>Transaction Type</Form.Label>\n                            <Form.Control as=\"select\" id=\"transactionSelection\">\n                                {this.state.transTypes.map((transType, index) => \n                                    <option key={index} value={transType.transaction_name} id={transType.transaction_type_id}>{transType.transaction_type}</option>\n                                )}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>Product SKU</Form.Label>\n                            <Form.Control as=\"select\" id=\"productSelection\">\n                            {this.state.products.map((product, index) => \n                                <option key={index} value={product.product_name} id={product.product_id}>{product.product_sku}</option>\n                            )}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control type=\"text\" rows=\"1\" name=\"price\" onChange={this.handleInputChange} />\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control type=\"text\" rows=\"1\" name=\"quantity\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                    </Form>\n                    <Button variant=\"success\" onClick={this.submitOrder}>Order Now</Button>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default CreateOrder;"]},"metadata":{},"sourceType":"module"}