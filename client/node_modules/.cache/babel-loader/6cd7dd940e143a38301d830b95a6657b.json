{"ast":null,"code":"var _jsxFileName = \"/Users/ricky/Documents/CodingBootcamp/Projects/Project-3/client/src/views/Forecast.js\";\nimport React, { Component } from 'react';\nimport API from '../utils/API';\nimport forecastModel from '../utils/forecastingModel';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nclass Forecast extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.submitAssumptions = e => {\n      e.preventDefault();\n      let output = forecastModel.forecastOutput(parseFloat(this.state.unitsOrder), parseFloat(this.state.totalOrder), parseFloat(this.state.masterCarton));\n      let product = document.getElementById(\"products\");\n      this.setState({\n        orderAmount: output,\n        selectedProduct: product.options[product.selectedIndex].value\n      }, () => {\n        API.getProduct(this.state.selectedProduct).then(data => console.log(data));\n      });\n    };\n\n    this.state = {\n      unitsOrder: '',\n      totalOrder: '',\n      masterCarton: '',\n      orderAmount: '',\n      selectedProduct: ''\n    };\n  } // create an event which will send the data to \n\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Assumption\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Input\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Units Order\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"unitsOrder\",\n      placeholder: \"Units Ordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Total Orders\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"totalOrders\",\n      placeholder: \"Total Orders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Master Carton\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"masterCarton\",\n      placeholder: \"Master Carton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Sales Growth\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"salesGrowth\",\n      placeholder: \"Sales Growth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Lead Time\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"leadTime\",\n      placeholder: \"Lead Time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))))), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.submitAssumptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Calculate\"));\n  }\n\n}\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/ricky/Documents/CodingBootcamp/Projects/Project-3/client/src/views/Forecast.js"],"names":["React","Component","API","forecastModel","Table","Button","Container","Forecast","constructor","props","handleChange","event","setState","target","name","value","submitAssumptions","e","preventDefault","output","forecastOutput","parseFloat","state","unitsOrder","totalOrder","masterCarton","product","document","getElementById","orderAmount","selectedProduct","options","selectedIndex","getProduct","then","data","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport API from '../utils/API';\nimport forecastModel from '../utils/forecastingModel';\n\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nclass Forecast extends Component {\n    constructor(props) {\n        super(props);\n\n    this.state = {\n        unitsOrder: '',\n        totalOrder: '',\n        masterCarton: '',\n        orderAmount: '',\n        selectedProduct: ''\n    }\n}\n\n// create an event which will send the data to \nhandleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value});\n}\n\nsubmitAssumptions = (e) => {\n    e.preventDefault();\n\n    let output = forecastModel.forecastOutput(parseFloat(this.state.unitsOrder), parseFloat(this.state.totalOrder), parseFloat(this.state.masterCarton));\n    let product = document.getElementById(\"products\");\n\n    this.setState(\n        {orderAmount: output, selectedProduct: product.options[product.selectedIndex].value}, \n        () => {\n            API.getProduct(this.state.selectedProduct).then((data)=> console.log(data));\n        });\n}\n\n    render() {\n        return(\n            <Container >\n                <Table striped bordered hover size=\"sm\">\n                    <thead>\n                        <tr>\n                        <th>Assumption</th>\n                        <th>Input</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                        <td>Units Order</td>\n                        <td><input type=\"text\" name=\"unitsOrder\" placeholder=\"Units Ordered\"></input></td>\n                        </tr>\n                        <tr>\n                        <td>Total Orders</td>\n                        <td><input type=\"text\" name=\"totalOrders\" placeholder=\"Total Orders\"></input></td>\n                        </tr>\n                        <tr>\n                        <td>Master Carton</td>\n                        <td><input type=\"text\" name=\"masterCarton\" placeholder=\"Master Carton\"></input></td>\n                        </tr>\n                        <tr>\n                        <td>Sales Growth</td>\n                        <td><input type=\"text\" name=\"salesGrowth\" placeholder=\"Sales Growth\"></input></td>\n                        </tr>\n                        <tr>\n                        <td>Lead Time</td>\n                        <td><input type=\"text\" name=\"leadTime\" placeholder=\"Lead Time\"></input></td>\n                        </tr> \n                    </tbody>\n                </Table>\n                <Button variant=\"success\" onClick={this.submitAssumptions}>Calculate</Button>\n            </Container>\n\n        )\n    }\n}\n\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}