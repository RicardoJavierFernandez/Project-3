{"ast":null,"code":"var _jsxFileName = \"/Users/ricky/Documents/CodingBootcamp/Projects/Project-3/client/src/views/CreateOrder.js\";\nimport React, { Component } from 'react';\nimport API from '../utils/API';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass CreateOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTransactionTypes = () => {\n      API.getAllTransactionTypes().then(dbResponse => {\n        this.setState({\n          transTypes: dbResponse.data\n        });\n      });\n    };\n\n    this.getProducts = () => {\n      API.getAllProducts().then(dbResponse => {\n        this.setState({\n          products: dbResponse.data\n        });\n      });\n    };\n\n    this.handleInputChange = e => {\n      // e.persist();\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitOrder = e => {\n      e.preventDefault();\n      let transaction = document.getElementById('transactionSelection');\n      let product = document.getElementById('productSelection');\n      this.setState({\n        selectedTransaction: transaction.options[transaction.selectedIndex].id,\n        selectedProduct: product.options[product.selectedIndex].id\n      }, () => API.createOrder({\n        transaction_type_id: this.state.selectedTransaction,\n        product_id: this.state.selectedProduct,\n        quantity: this.state.quantity,\n        price: this.state.price\n      }).then(dbResponse => {\n        console.log(dbResponse);\n        this.setState({\n          price: '',\n          quantity: ''\n        }, () => {\n          document.getElementById('price').value = \"\";\n          document.getElementById('quantity').value = \"\";\n        });\n      }).catch(err => console.log(err)));\n    };\n\n    this.state = {\n      transTypes: [],\n      products: [],\n      selectedTransaction: '',\n      selectedProduct: '',\n      price: 0,\n      quantity: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getTransactionTypes();\n    this.getProducts();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: {\n        span: 4,\n        offset: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Transaction Type\"), React.createElement(Form.Control, {\n      as: \"select\",\n      id: \"transactionSelection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.transTypes.map((transType, index) => React.createElement(\"option\", {\n      key: index,\n      value: transType.transaction_name,\n      id: transType.transaction_type_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, transType.transaction_type)))), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Product SKU\"), React.createElement(Form.Control, {\n      as: \"select\",\n      id: \"productSelection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.products.map((product, index) => React.createElement(\"option\", {\n      key: index,\n      value: product.product_name,\n      id: product.product_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, product.product_sku)))), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Price\"), React.createElement(Form.Control, {\n      type: \"text\",\n      rows: \"1\",\n      name: \"price\",\n      id: \"price\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(Form.Control, {\n      type: \"text\",\n      rows: \"1\",\n      name: \"quantity\",\n      id: \"quantity\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.submitOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Order Now\"))));\n  }\n\n}\n\nexport default CreateOrder;","map":{"version":3,"sources":["/Users/ricky/Documents/CodingBootcamp/Projects/Project-3/client/src/views/CreateOrder.js"],"names":["React","Component","API","Container","Col","Form","Button","CreateOrder","constructor","props","getTransactionTypes","getAllTransactionTypes","then","dbResponse","setState","transTypes","data","getProducts","getAllProducts","products","handleInputChange","e","target","name","value","submitOrder","preventDefault","transaction","document","getElementById","product","selectedTransaction","options","selectedIndex","id","selectedProduct","createOrder","transaction_type_id","state","product_id","quantity","price","console","log","catch","err","componentDidMount","render","span","offset","map","transType","index","transaction_name","transaction_type","product_name","product_sku"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport API from '../utils/API';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass CreateOrder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            transTypes: [],\n            products: [],\n            selectedTransaction: '',\n            selectedProduct: '',\n            price: 0,\n            quantity: 0\n        }\n    }\n\n    getTransactionTypes = () => {\n        API.getAllTransactionTypes()\n            .then((dbResponse) => {\n                this.setState({transTypes: dbResponse.data})\n            });\n    }\n\n    getProducts = () => {\n        API.getAllProducts()\n            .then((dbResponse) => {\n                this.setState({products: dbResponse.data});\n            });\n    }\n\n    componentDidMount() {\n        this.getTransactionTypes();\n        this.getProducts();\n    }\n\n    handleInputChange = (e) => {\n        // e.persist();\n\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    submitOrder = (e) => {\n        e.preventDefault();\n\n        let transaction = document.getElementById('transactionSelection');\n        let product = document.getElementById('productSelection');\n\n        this.setState({\n            selectedTransaction: transaction.options[transaction.selectedIndex].id, \n            selectedProduct: product.options[product.selectedIndex].id\n        }, \n        () => API.createOrder({\n            transaction_type_id: this.state.selectedTransaction,\n            product_id: this.state.selectedProduct,\n            quantity: this.state.quantity, \n            price: this.state.price\n        })\n        .then((dbResponse) => {\n            console.log(dbResponse);\n            this.setState({price:'', quantity:''}, () => {\n                document.getElementById('price').value = \"\";\n                document.getElementById('quantity').value = \"\";\n            })\n        })\n        .catch((err) => console.log(err))\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Col md={{ span: 4, offset: 4 }}>\n                    <Form>\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>Transaction Type</Form.Label>\n                            <Form.Control as=\"select\" id=\"transactionSelection\">\n                                {this.state.transTypes.map((transType, index) => \n                                    <option \n                                        key={index} \n                                        value={transType.transaction_name} \n                                        id={transType.transaction_type_id}\n                                    >\n                                        {transType.transaction_type}\n                                    </option>\n                                )}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>Product SKU</Form.Label>\n                            <Form.Control as=\"select\" id=\"productSelection\">\n                            {this.state.products.map((product, index) => \n                                <option \n                                    key={index} \n                                    value={product.product_name} \n                                    id={product.product_id}\n                                >\n                                    {product.product_sku}\n                                </option>\n                            )}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control type=\"text\" rows=\"1\" name=\"price\" id= \"price\" onChange={this.handleInputChange} />\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control type=\"text\" rows=\"1\" name=\"quantity\" id=\"quantity\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                    </Form>\n                    <Button variant=\"success\" onClick={this.submitOrder}>Order Now</Button>\n                    </Col>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default CreateOrder;"]},"metadata":{},"sourceType":"module"}